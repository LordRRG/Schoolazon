{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ranve\\\\Downloads\\\\schoolazon_mvp_realtime\\\\frontend\\\\src\\\\pages\\\\PostInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport socket from '../socket';\nimport api from '../api';\n\n// Simple input that can send text and optional attachment (upload via existing /resources/upload to Cloudinary)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostInput({\n  community\n}) {\n  _s();\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  const [msg, setMsg] = useState('');\n  const textareaRef = React.useRef();\n  // Insert formatting at cursor\n  const insertFormat = format => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    let before = text.substring(0, start);\n    let selected = text.substring(start, end);\n    let after = text.substring(end);\n    let newText = '';\n    if (format === 'bold') {\n      newText = before + '**' + (selected || 'bold text') + '**' + after;\n      setText(newText);\n      setTimeout(() => textarea.focus(), 0);\n    } else if (format === 'italic') {\n      newText = before + '_' + (selected || 'italic text') + '_' + after;\n      setText(newText);\n      setTimeout(() => textarea.focus(), 0);\n    }\n  };\n  const send = async e => {\n    e.preventDefault();\n    let attachmentUrl = null;\n    try {\n      if (file) {\n        const fd = new FormData();\n        fd.append('file', file);\n        fd.append('title', 'post-attachment');\n        fd.append('description', 'attachment');\n        fd.append('communityId', community._id);\n        // use /resources/upload which returns resource object with fileUrl\n        const res = await api.post('/resources/upload', fd, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        attachmentUrl = res.data.fileUrl;\n      }\n      // emit via socket\n      socket.emit('send_post', {\n        communityId: community._id,\n        text,\n        attachmentUrl\n      });\n      setText('');\n      setFile(null);\n      setMsg('Sent');\n      setTimeout(() => setMsg(''), 2000);\n    } catch (err) {\n      console.error(err);\n      setMsg('Failed to send');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: send,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 d-flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-light btn-sm\",\n          title: \"Bold\",\n          onClick: () => insertFormat('bold'),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-type-bold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          title: \"Italic\",\n          onClick: () => insertFormat('italic'),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-type-italic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          className: \"form-control\",\n          placeholder: \"Write a quick post...\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          style: {\n            height: 80\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), msg && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ms-3 text-success\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(PostInput, \"9lvyEFh2kBHLcdMMsmH2vFTDJec=\");\n_c = PostInput;\nvar _c;\n$RefreshReg$(_c, \"PostInput\");","map":{"version":3,"names":["React","useState","socket","api","jsxDEV","_jsxDEV","PostInput","community","_s","text","setText","file","setFile","msg","setMsg","textareaRef","useRef","insertFormat","format","textarea","current","start","selectionStart","end","selectionEnd","before","substring","selected","after","newText","setTimeout","focus","send","e","preventDefault","attachmentUrl","fd","FormData","append","_id","res","post","headers","data","fileUrl","emit","communityId","err","console","error","className","children","onSubmit","type","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","placeholder","value","onChange","target","style","height","files","_c","$RefreshReg$"],"sources":["C:/Users/ranve/Downloads/schoolazon_mvp_realtime/frontend/src/pages/PostInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport socket from '../socket';\nimport api from '../api';\n\n// Simple input that can send text and optional attachment (upload via existing /resources/upload to Cloudinary)\nexport default function PostInput({ community }){\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  const [msg, setMsg] = useState('');\n  const textareaRef = React.useRef();\n  // Insert formatting at cursor\n  const insertFormat = (format) => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    let before = text.substring(0, start);\n    let selected = text.substring(start, end);\n    let after = text.substring(end);\n    let newText = '';\n    if (format === 'bold') {\n      newText = before + '**' + (selected || 'bold text') + '**' + after;\n      setText(newText);\n      setTimeout(() => textarea.focus(), 0);\n    } else if (format === 'italic') {\n      newText = before + '_' + (selected || 'italic text') + '_' + after;\n      setText(newText);\n      setTimeout(() => textarea.focus(), 0);\n    }\n  };\n\n  const send = async (e)=>{\n    e.preventDefault();\n    let attachmentUrl = null;\n    try{\n      if(file){\n        const fd = new FormData();\n        fd.append('file', file);\n        fd.append('title', 'post-attachment');\n        fd.append('description','attachment');\n        fd.append('communityId', community._id);\n        // use /resources/upload which returns resource object with fileUrl\n        const res = await api.post('/resources/upload', fd, { headers: {'Content-Type':'multipart/form-data'} });\n        attachmentUrl = res.data.fileUrl;\n      }\n      // emit via socket\n      socket.emit('send_post', { communityId: community._id, text, attachmentUrl });\n      setText(''); setFile(null); setMsg('Sent');\n      setTimeout(()=>setMsg(''), 2000);\n    }catch(err){\n      console.error(err);\n      setMsg('Failed to send');\n    }\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <form onSubmit={send}>\n        <div className=\"mb-2 d-flex gap-2\">\n          <button type=\"button\" className=\"btn btn-light btn-sm\" title=\"Bold\" onClick={() => insertFormat('bold')}>\n            <i className=\"bi bi-type-bold\"></i>\n          </button>\n          <button type=\"button\" className=\"btn btn-primary\" title=\"Italic\" onClick={() => insertFormat('italic')}>\n            <i className=\"bi bi-type-italic\"></i>\n          </button>\n        </div>\n        <div className=\"mb-3\">\n          <textarea\n            ref={textareaRef}\n            className=\"form-control\"\n            placeholder=\"Write a quick post...\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            style={{height:80}}\n          />\n        </div>\n        <div className=\"mb-3\">\n          <input\n            className=\"form-control\"\n            type=\"file\"\n            onChange={e => setFile(e.target.files[0])}\n          />\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">Send</button>\n        {msg && <span className=\"ms-3 text-success\">{msg}</span>}\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}