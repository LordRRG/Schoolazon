{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nconst majorVersion = parseInt(React.version.split(\".\")[0], 10);\nconst shouldReturnCleanup = majorVersion >= 19;\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    return ref(value);\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  const availableRefs = refs.filter(ref => ref != null);\n  if (shouldReturnCleanup) {\n    const cleanupMap = /* @__PURE__ */new Map();\n    return node => {\n      availableRefs.forEach(ref => {\n        const cleanup = assignRef(ref, node);\n        if (cleanup) {\n          cleanupMap.set(ref, cleanup);\n        }\n      });\n      return () => {\n        availableRefs.forEach(ref => {\n          const cleanup = cleanupMap.get(ref);\n          if (cleanup && typeof cleanup === \"function\") {\n            cleanup();\n          } else {\n            assignRef(ref, null);\n          }\n        });\n        cleanupMap.clear();\n      };\n    };\n  } else {\n    return node => {\n      availableRefs.forEach(ref => {\n        assignRef(ref, node);\n      });\n    };\n  }\n}\nexport { assignRef, mergeRefs };","map":{"version":3,"names":["React","majorVersion","parseInt","version","split","shouldReturnCleanup","assignRef","ref","value","current","error","Error","mergeRefs","refs","availableRefs","filter","cleanupMap","Map","node","forEach","cleanup","set","get","clear"],"sources":["C:/Users/ranve/Downloads/schoolazon_mvp_realtime/frontend/node_modules/@chakra-ui/react/dist/esm/merge-refs.js"],"sourcesContent":["\"use strict\";\nimport * as React from 'react';\n\nconst majorVersion = parseInt(React.version.split(\".\")[0], 10);\nconst shouldReturnCleanup = majorVersion >= 19;\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    return ref(value);\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  const availableRefs = refs.filter((ref) => ref != null);\n  if (shouldReturnCleanup) {\n    const cleanupMap = /* @__PURE__ */ new Map();\n    return (node) => {\n      availableRefs.forEach((ref) => {\n        const cleanup = assignRef(ref, node);\n        if (cleanup) {\n          cleanupMap.set(ref, cleanup);\n        }\n      });\n      return () => {\n        availableRefs.forEach((ref) => {\n          const cleanup = cleanupMap.get(ref);\n          if (cleanup && typeof cleanup === \"function\") {\n            cleanup();\n          } else {\n            assignRef(ref, null);\n          }\n        });\n        cleanupMap.clear();\n      };\n    };\n  } else {\n    return (node) => {\n      availableRefs.forEach((ref) => {\n        assignRef(ref, node);\n      });\n    };\n  }\n}\n\nexport { assignRef, mergeRefs };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,MAAMC,YAAY,GAAGC,QAAQ,CAACF,KAAK,CAACG,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAC9D,MAAMC,mBAAmB,GAAGJ,YAAY,IAAI,EAAE;AAC9C,SAASK,SAASA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC7B,IAAID,GAAG,IAAI,IAAI,EAAE;EACjB,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;IAC7B,OAAOA,GAAG,CAACC,KAAK,CAAC;EACnB;EACA,IAAI;IACFD,GAAG,CAACE,OAAO,GAAGD,KAAK;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwBH,KAAK,aAAaD,GAAG,GAAG,CAAC;EACnE;AACF;AACA,SAASK,SAASA,CAAC,GAAGC,IAAI,EAAE;EAC1B,MAAMC,aAAa,GAAGD,IAAI,CAACE,MAAM,CAAER,GAAG,IAAKA,GAAG,IAAI,IAAI,CAAC;EACvD,IAAIF,mBAAmB,EAAE;IACvB,MAAMW,UAAU,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC;IAC5C,OAAQC,IAAI,IAAK;MACfJ,aAAa,CAACK,OAAO,CAAEZ,GAAG,IAAK;QAC7B,MAAMa,OAAO,GAAGd,SAAS,CAACC,GAAG,EAAEW,IAAI,CAAC;QACpC,IAAIE,OAAO,EAAE;UACXJ,UAAU,CAACK,GAAG,CAACd,GAAG,EAAEa,OAAO,CAAC;QAC9B;MACF,CAAC,CAAC;MACF,OAAO,MAAM;QACXN,aAAa,CAACK,OAAO,CAAEZ,GAAG,IAAK;UAC7B,MAAMa,OAAO,GAAGJ,UAAU,CAACM,GAAG,CAACf,GAAG,CAAC;UACnC,IAAIa,OAAO,IAAI,OAAOA,OAAO,KAAK,UAAU,EAAE;YAC5CA,OAAO,CAAC,CAAC;UACX,CAAC,MAAM;YACLd,SAAS,CAACC,GAAG,EAAE,IAAI,CAAC;UACtB;QACF,CAAC,CAAC;QACFS,UAAU,CAACO,KAAK,CAAC,CAAC;MACpB,CAAC;IACH,CAAC;EACH,CAAC,MAAM;IACL,OAAQL,IAAI,IAAK;MACfJ,aAAa,CAACK,OAAO,CAAEZ,GAAG,IAAK;QAC7BD,SAAS,CAACC,GAAG,EAAEW,IAAI,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC;EACH;AACF;AAEA,SAASZ,SAAS,EAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}